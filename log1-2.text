<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<title>配車サイト</title>
<style>
  body { font-family: Arial, sans-serif; display: flex; flex-direction: column; align-items: center; padding: 20px; }
  h1 { font-size: 40px; text-align: center; color: #333; margin-bottom: 30px; }
  .section { margin-bottom: 20px; width: 300px; text-align: center; }
  label { display: block; margin-bottom: 5px; }
  #result { margin-top: 20px; }
</style>
</head>
<body>
<h1>配車サイト</h1>

<div class="section">
  <label for="carCount">車の台数を入力してください:
    <select id="carCount">
      <option value="1">1</option>
      <option value="2">2</option>
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
      <option value="7">7</option>
      <option value="8">8</option>
    </select>
  </label>
</div>

<div class="section">
  <p>配車する女の子を選択してください:</p>
  <label><input type="checkbox" value="A子" data-lat="35.0035510" data-lng="135.7319292"> A子（西院）</label>
  <label><input type="checkbox" value="B子" data-lat="34.9464393" data-lng="135.7612059"> B子（伏見）</label>
  <label><input type="checkbox" value="C子" data-lat="35.0181831" data-lng="135.9687904"> C子（草津）</label>
</div>

<div class="section">
  <button onclick="assignCars()">配車する</button>
</div>

<div id="result"></div>

<script>
// 拠点の緯度経度
const base = { lat: 35.0044801, lng: 135.7736121 };

// 緯度経度から距離計算（Haversine）
function getDistance(lat1, lng1, lat2, lng2) {
  const R = 6371; // km
  const dLat = (lat2-lat1)*Math.PI/180;
  const dLng = (lng2-lng1)*Math.PI/180;
  const a = Math.sin(dLat/2)**2 + Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLng/2)**2;
  const c = 2*Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
  return R * c;
}

function assignCars() {
  const carCount = parseInt(document.getElementById("carCount").value);
  const checked = Array.from(document.querySelectorAll("input[type=checkbox]:checked"));

  if (checked.length === 0) {
    alert("女の子を選択してください");
    return;
  }

  // 女の子のデータに距離を追加
  const girls = checked.map(cb => ({
    name: cb.value,
    lat: parseFloat(cb.dataset.lat),
    lng: parseFloat(cb.dataset.lng),
    distance: getDistance(base.lat, base.lng, parseFloat(cb.dataset.lat), parseFloat(cb.dataset.lng))
  }));

  // 距離順にソート（近い順）
  girls.sort((a,b) => a.distance - b.distance);

  // 車ごとに割り当て（最大3人）
  const cars = [];
  for (let i=0; i<carCount; i++) cars.push([]);

  let i = 0;
  for (const g of girls) {
    cars[i].push(g.name);
    i = (i+1) % carCount;
    // 1台につき最大3人
    if (cars[i].length >= 3) i = (i+1) % carCount;
  }

  // 結果表示
  let html = "<h3>配車結果</h3>";
  cars.forEach((car, idx) => {
    html += `<p>車${idx+1}: ${car.join(", ") || "なし"}</p>`;
  });
  document.getElementById("result").innerHTML = html;
}
</script>

</body>
</html>
