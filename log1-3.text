<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<title>配車サイト</title>
<style>
  body { font-family: Arial, sans-serif; display: flex; flex-direction: column; align-items: center; padding: 20px; }
  h1 { font-size: 40px; text-align: center; color: #333; margin-bottom: 30px; }
  .section { margin-bottom: 20px; width: 300px; text-align: center; }
  label { display: block; margin-bottom: 5px; }
  #result { margin-top: 20px; }
</style>
</head>
<body>
<h1>配車サイト</h1>

<div class="section">
  <label for="carCount">車の台数を入力してください:
    <select id="carCount">
      <option value="1">1</option>
      <option value="2">2</option>
      <option value="3">3</option>
      <option value="4">4</option>
      <option value="5">5</option>
      <option value="6">6</option>
      <option value="7">7</option>
      <option value="8">8</option>
    </select>
  </label>
</div>

<div class="section">
  <p>配車する女の子を選択してください:</p>
  <label><input type="checkbox" value="A子" data-lat="35.0035510" data-lng="135.7319292"> A子（西院）</label>
  <label><input type="checkbox" value="B子" data-lat="34.9464393" data-lng="135.7612059"> B子（伏見）</label>
  <label><input type="checkbox" value="C子" data-lat="35.0181831" data-lng="135.9687904"> C子（草津）</label>
  <label><input type="checkbox" value="D子" data-lat="34.9793651" data-lng="135.7037059"> D子（桂）　</label>
  <label><input type="checkbox" value="E子" data-lat="35.0025791" data-lng="135.9507197"> E子（南草津）</label>
  <label><input type="checkbox" value="F子" data-lat="35.0511147" data-lng="135.9945484"> F子（守山）</label>
</div>

<div class="section">
  <button onclick="assignCars()">配車する</button>
</div>

<div id="result"></div>

<script>
// 拠点の緯度経度
const base = { lat: 35.0044801, lng: 135.7736121 };

// 緯度経度から距離計算（簡易的にユークリッド距離）
function distance(a, b) {
  const dx = a.lat - b.lat;
  const dy = a.lng - b.lng;
  return Math.sqrt(dx*dx + dy*dy);
}

// K-meansクラスタリング（シンプル版）
function kMeans(points, k, maxIter=10) {
  // 初期中心：拠点を基準にランダムに選択
  let centroids = [];
  for (let i=0; i<k; i++) {
    centroids.push(points[Math.floor(Math.random()*points.length)]);
  }

  let clusters = [];
  for (let iter=0; iter<maxIter; iter++) {
    // クラスタ初期化
    clusters = Array.from({length:k}, ()=>[]);
    // 割り当て
    for (const p of points) {
      let minDist = Infinity;
      let clusterIndex = 0;
      centroids.forEach((c, idx)=>{
        const d = distance(p, c);
        if(d < minDist){ minDist=d; clusterIndex=idx; }
      });
      clusters[clusterIndex].push(p);
    }
    // 中心を更新
    centroids = clusters.map(cl=>{
      if(cl.length===0) return {lat:0,lng:0};
      const lat = cl.reduce((sum,p)=>sum+p.lat,0)/cl.length;
      const lng = cl.reduce((sum,p)=>sum+p.lng,0)/cl.length;
      return {lat,lng};
    });
  }
  return clusters;
}

function assignCars() {
  const carCount = parseInt(document.getElementById("carCount").value);
  const checked = Array.from(document.querySelectorAll("input[type=checkbox]:checked"));

  if(checked.length===0){
    alert("女の子を選択してください");
    return;
  }

  // 女の子のデータ
  const girls = checked.map(cb=>({
    name: cb.value,
    lat: parseFloat(cb.dataset.lat),
    lng: parseFloat(cb.dataset.lng)
  }));

  // k-meansでクラスタリング
  const clusters = kMeans(girls, carCount);

  // 1台に最大3人までに制限
  const cars = clusters.map(cl=>cl.slice(0,3).map(p=>p.name));

  // 結果表示
  let html = "<h3>配車結果</h3>";
  cars.forEach((car, idx)=>{
    html += `<p>車${idx+1}: ${car.join(", ") || "なし"}</p>`;
  });
  document.getElementById("result").innerHTML = html;
}
</script>

</body>
</html>
